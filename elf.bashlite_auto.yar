rule elf_bashlite_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2020-12-22"
        version = "1"
        description = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/elf.bashlite"
        malpedia_rule_date = "20201222"
        malpedia_hash = "30354d830a29f0fbd3714d93d94dea941d77a130"
        malpedia_version = "20201023"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 89c2 89d0 c1e81f 01d0 d1f8 }
            // n = 5, score = 300
            //   89c2                 | mov                 dword ptr [edx + 4], ecx
            //   89d0                 | mov                 dword ptr [edx + eax], eax
            //   c1e81f               | mov                 dword ptr [edx + 0xc], 0x805fb94
            //   01d0                 | mov                 dword ptr [edx + 4], ecx
            //   d1f8                 | mov                 dword ptr [edx + eax], eax

        $sequence_1 = { c785ecefffff01000000 eb0a c785ecefffff00000000 8b85ecefffff c9 }
            // n = 5, score = 300
            //   c785ecefffff01000000     | mov    eax, dword ptr [ebp - 0x24]
            //   eb0a                 | mov                 edx, eax
            //   c785ecefffff00000000     | mov    eax, edx
            //   8b85ecefffff         | mov                 dword ptr [eax], 0
            //   c9                   | mov                 dword ptr [eax + 4], 0

        $sequence_2 = { f7d0 21d0 3345fc c9 }
            // n = 4, score = 300
            //   f7d0                 | mov                 eax, dword ptr [ebp - 0xd8]
            //   21d0                 | dec                 eax
            //   3345fc               | cwde                
            //   c9                   | mov                 dword ptr [ebp - 0x20], 0

        $sequence_3 = { c1f802 89c2 89d0 01c0 01d0 }
            // n = 5, score = 300
            //   c1f802               | dec                 eax
            //   89c2                 | mov                 dword ptr [esp + 0x68], ebp
            //   89d0                 | dec                 esp
            //   01c0                 | mov                 dword ptr [esp + 0x70], esi
            //   01d0                 | mov                 ecx, 0x1f4

        $sequence_4 = { f7d0 21d0 3345fc c9 c3 55 }
            // n = 6, score = 300
            //   f7d0                 | neg                 ebp
            //   21d0                 | jmp                 0xc86
            //   3345fc               | mov                 eax, dword ptr [ebp - 0x6c]
            //   c9                   | movzx               edi, ax
            //   c3                   | mov                 word ptr [ebp - 0x4e], ax
            //   55                   | dec                 eax

        $sequence_5 = { 85c0 750c c785ecefffff01000000 eb0a c785ecefffff00000000 8b85ecefffff }
            // n = 6, score = 300
            //   85c0                 | dec                 eax
            //   750c                 | mov                 eax, dword ptr [ebp - 0xf8]
            //   c785ecefffff01000000     | dec    eax
            //   eb0a                 | add                 eax, 0x10
            //   c785ecefffff00000000     | test    eax, eax
            //   8b85ecefffff         | jne                 0x8f4

        $sequence_6 = { 750c c785ecefffff01000000 eb0a c785ecefffff00000000 }
            // n = 4, score = 300
            //   750c                 | test                ebp, ebp
            //   c785ecefffff01000000     | je    8
            //   eb0a                 | inc                 ecx
            //   c785ecefffff00000000     | call    ebp

        $sequence_7 = { eb19 e8???????? c70016000000 e8???????? c70016000000 }
            // n = 5, score = 300
            //   eb19                 | je                  0xff9
            //   e8????????           |                     
            //   c70016000000         | test                eax, eax
            //   e8????????           |                     
            //   c70016000000         | jne                 0x1007

        $sequence_8 = { 89c2 89d0 c1e81f 01d0 }
            // n = 4, score = 300
            //   89c2                 | mov                 esp, dword ptr [esp + 0x80]
            //   89d0                 | test                al, dl
            //   c1e81f               | jne                 0x93e
            //   01d0                 | dec                 eax

        $sequence_9 = { e8???????? 8945ec 837dec00 750b }
            // n = 4, score = 300
            //   e8????????           |                     
            //   8945ec               | dec                 eax
            //   837dec00             | mov                 dword ptr [esp], eax
            //   750b                 | test                eax, eax

    condition:
        7 of them and filesize < 274018
}